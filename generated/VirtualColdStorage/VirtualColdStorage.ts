// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ExecutionExecuted extends ethereum.Event {
  get params(): ExecutionExecuted__Params {
    return new ExecutionExecuted__Params(this);
  }
}

export class ExecutionExecuted__Params {
  _event: ExecutionExecuted;

  constructor(event: ExecutionExecuted) {
    this._event = event;
  }

  get subAccount(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get target(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get callData(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class ExecutionRequested extends ethereum.Event {
  get params(): ExecutionRequested__Params {
    return new ExecutionRequested__Params(this);
  }
}

export class ExecutionRequested__Params {
  _event: ExecutionRequested;

  constructor(event: ExecutionRequested) {
    this._event = event;
  }

  get subAccount(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get target(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get callData(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get executeAfter(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class VirtualColdStorage extends ethereum.SmartContract {
  static bind(address: Address): VirtualColdStorage {
    return new VirtualColdStorage("VirtualColdStorage", address);
  }

  isModuleType(isType: BigInt): boolean {
    let result = super.call("isModuleType", "isModuleType(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(isType)
    ]);

    return result[0].toBoolean();
  }

  try_isModuleType(isType: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("isModuleType", "isModuleType(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(isType)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  postCheck(hookData: Bytes): boolean {
    let result = super.call("postCheck", "postCheck(bytes):(bool)", [
      ethereum.Value.fromBytes(hookData)
    ]);

    return result[0].toBoolean();
  }

  try_postCheck(hookData: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("postCheck", "postCheck(bytes):(bool)", [
      ethereum.Value.fromBytes(hookData)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  preCheck(msgSender: Address, msgData: Bytes): Bytes {
    let result = super.call("preCheck", "preCheck(address,bytes):(bytes)", [
      ethereum.Value.fromAddress(msgSender),
      ethereum.Value.fromBytes(msgData)
    ]);

    return result[0].toBytes();
  }

  try_preCheck(msgSender: Address, msgData: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall("preCheck", "preCheck(address,bytes):(bytes)", [
      ethereum.Value.fromAddress(msgSender),
      ethereum.Value.fromBytes(msgData)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  version(): string {
    let result = super.call("version", "version():(string)", []);

    return result[0].toString();
  }

  try_version(): ethereum.CallResult<string> {
    let result = super.tryCall("version", "version():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class OnInstallCall extends ethereum.Call {
  get inputs(): OnInstallCall__Inputs {
    return new OnInstallCall__Inputs(this);
  }

  get outputs(): OnInstallCall__Outputs {
    return new OnInstallCall__Outputs(this);
  }
}

export class OnInstallCall__Inputs {
  _call: OnInstallCall;

  constructor(call: OnInstallCall) {
    this._call = call;
  }

  get data(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class OnInstallCall__Outputs {
  _call: OnInstallCall;

  constructor(call: OnInstallCall) {
    this._call = call;
  }
}

export class OnUninstallCall extends ethereum.Call {
  get inputs(): OnUninstallCall__Inputs {
    return new OnUninstallCall__Inputs(this);
  }

  get outputs(): OnUninstallCall__Outputs {
    return new OnUninstallCall__Outputs(this);
  }
}

export class OnUninstallCall__Inputs {
  _call: OnUninstallCall;

  constructor(call: OnUninstallCall) {
    this._call = call;
  }

  get data(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class OnUninstallCall__Outputs {
  _call: OnUninstallCall;

  constructor(call: OnUninstallCall) {
    this._call = call;
  }
}

export class PostCheckCall extends ethereum.Call {
  get inputs(): PostCheckCall__Inputs {
    return new PostCheckCall__Inputs(this);
  }

  get outputs(): PostCheckCall__Outputs {
    return new PostCheckCall__Outputs(this);
  }
}

export class PostCheckCall__Inputs {
  _call: PostCheckCall;

  constructor(call: PostCheckCall) {
    this._call = call;
  }

  get hookData(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PostCheckCall__Outputs {
  _call: PostCheckCall;

  constructor(call: PostCheckCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class PreCheckCall extends ethereum.Call {
  get inputs(): PreCheckCall__Inputs {
    return new PreCheckCall__Inputs(this);
  }

  get outputs(): PreCheckCall__Outputs {
    return new PreCheckCall__Outputs(this);
  }
}

export class PreCheckCall__Inputs {
  _call: PreCheckCall;

  constructor(call: PreCheckCall) {
    this._call = call;
  }

  get msgSender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get msgData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class PreCheckCall__Outputs {
  _call: PreCheckCall;

  constructor(call: PreCheckCall) {
    this._call = call;
  }

  get hookData(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class RequestTimelockedExecutionCall extends ethereum.Call {
  get inputs(): RequestTimelockedExecutionCall__Inputs {
    return new RequestTimelockedExecutionCall__Inputs(this);
  }

  get outputs(): RequestTimelockedExecutionCall__Outputs {
    return new RequestTimelockedExecutionCall__Outputs(this);
  }
}

export class RequestTimelockedExecutionCall__Inputs {
  _call: RequestTimelockedExecutionCall;

  constructor(call: RequestTimelockedExecutionCall) {
    this._call = call;
  }

  get _exec(): RequestTimelockedExecutionCall_execStruct {
    return changetype<RequestTimelockedExecutionCall_execStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get additionalWait(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RequestTimelockedExecutionCall__Outputs {
  _call: RequestTimelockedExecutionCall;

  constructor(call: RequestTimelockedExecutionCall) {
    this._call = call;
  }
}

export class RequestTimelockedExecutionCall_execStruct extends ethereum.Tuple {
  get target(): Address {
    return this[0].toAddress();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }

  get callData(): Bytes {
    return this[2].toBytes();
  }
}

export class SetWaitPeriodCall extends ethereum.Call {
  get inputs(): SetWaitPeriodCall__Inputs {
    return new SetWaitPeriodCall__Inputs(this);
  }

  get outputs(): SetWaitPeriodCall__Outputs {
    return new SetWaitPeriodCall__Outputs(this);
  }
}

export class SetWaitPeriodCall__Inputs {
  _call: SetWaitPeriodCall;

  constructor(call: SetWaitPeriodCall) {
    this._call = call;
  }

  get waitPeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetWaitPeriodCall__Outputs {
  _call: SetWaitPeriodCall;

  constructor(call: SetWaitPeriodCall) {
    this._call = call;
  }
}

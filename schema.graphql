type ModuleRegistration @entity(immutable: true) {
  id: Bytes!
  implementation: Bytes! # address
  sender: Bytes! # address
  resolver: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Attested @entity(immutable: true) {
  id: Bytes!
  subject: Bytes! # address
  attester: Bytes! # address
  schema: Bytes! # bytes32
  dataPointer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Revoked @entity(immutable: true) {
  id: Bytes!
  subject: Bytes! # address
  revoker: Bytes! # address
  schema: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AttestedQuery @entity {
  id: Bytes!
  subject: Bytes! # address
  attester: Bytes! # address
  schema: Bytes! # bytes32
  dataPointer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  isRevoked: Boolean!
}
type ExecutionExecuted @entity(immutable: true) {
  id: Bytes!
  subAccount: Bytes! # address
  target: Bytes! # address
  value: BigInt! # uint256
  callData: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ExecutionRequested @entity(immutable: true) {
  id: Bytes!
  subAccount: Bytes! # address
  target: Bytes! # address
  value: BigInt! # uint256
  callData: Bytes! # bytes
  executeAfter: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ExecutionRequestedQuery @entity {
  id: Bytes!
  subAccount: Bytes! # address
  target: Bytes! # address
  value: BigInt! # uint256
  callData: Bytes! # bytes
  executeAfter: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  isExecuted: Boolean!
}
